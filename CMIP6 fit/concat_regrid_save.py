#%% 

# Title paper: 'Potential effects of the marine carbon cycle on the multiple equilibria window of the Atlantic Meridional Overturning Circulation
# Authors: Boot A.A., von der Heydt, A.S., and Dijkstra, H.A.
# Submitted to Earth System Dynamics
# Author script: A.A. Boot
# Contact person: Amber Boot (she/they; a.a.boot@uu.nl)

# Script for concatinating and regridding the data downloaded from https://esgf-node.llnl.gov/search/cmip6/
# Per model the script needed to be adapted depending on how many output files were generated by the model group
# All datasets were all saved with 'wfo' as variable to make further analysis easier

#%% Import modules
import xarray as xr 
import matplotlib.pyplot as plt
import numpy as np
import xesmf as xe

#%%
def MakeDataArray(data, time, lat, lon, dims):
        
        array = xr.DataArray(data = data,
                                 dims = ["time", "lat", "lon"],
                                 coords = dict(time = time,
                                               lat = lat,
                                               lon = lon));   
        return array

#%% Data dir
datadir='/Users/daan/Downloads/' 

filename = 'wfo_E3SM-2-0_r1i1p1f1.nc'

string1 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_000101-001012.nc'
string2 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_001101-002012.nc'
string3 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_002101-003012.nc'
string4 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_003101-004012.nc'
string5 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_004101-005012.nc'
string6 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_005101-006012.nc'
string7 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_006101-007012.nc'
string8 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_007101-008012.nc'
string9 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_008101-009012.nc'
string10 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_009101-010012.nc'
string11 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_010101-011012.nc'
string12 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_011101-012012.nc'
string13 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_012101-013012.nc'
string14 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_013101-014012.nc'
string15 = 'wfo_Omon_E3SM-2-0_1pctCO2_r1i1p1f1_gr_014101-015012.nc'

var1 = 'wfo'
  
#%% Function to load in data and regrid onto 1x1 grid
load_var1 = xr.open_dataset(f'{datadir}/'+string1)
VAR1=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string2)
VAR2=load_var1[var1].compute().squeeze()


load_var1 = xr.open_dataset(f'{datadir}/'+string3)
VAR3=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string4)
VAR5=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string5)
VAR6=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string6)
VAR7=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string7)
VAR8=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string8)
VAR9=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string9)
VAR10=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string10)
VAR11=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string11)
VAR12=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string12)
VAR13=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string13)
VAR14=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string14)
VAR15=load_var1[var1].compute().squeeze()

load_var1 = xr.open_dataset(f'{datadir}/'+string15)
VAR16=load_var1[var1].compute().squeeze()

#%% Concat data
VAR4 = xr.concat([VAR1,VAR2,VAR3,VAR5,VAR6,VAR7,VAR8,VAR9,VAR10,VAR11,VAR12,VAR13,VAR14,VAR15,VAR16],dim='time')

#%% Regrid
ds_out = xe.util.grid_global(1, 1)
grid1 = VAR4
regridder1 = xe.Regridder(grid1, ds_out, 'bilinear',periodic=True,ignore_degenerate=True) 
    
VR1 = regridder1(VAR4)

#%% Area data
data1='/Users/daan/CESM2_data'   # Location of dataset(s) 
load_var1 = xr.open_dataset(f'{data1}/area_gn.nc')
area_gn=load_var1['areacello'][:,:].compute().squeeze()

load_var1 = xr.open_dataset(f'{data1}/area_gr.nc')
area_gr=load_var1['areacello'][:,:].compute().squeeze()

lat=load_var1['lat'].load()
lon=load_var1['lon'].load()

#%% Save data
datadir='/Users/daan/Desktop/ESD_MEW_Repository/' 

read_var = MakeDataArray(data = VR1, time=VAR4['time'], lat=area_gr.lat, lon=area_gr.lon, dims = "2d")

data = read_var.to_dataset(name = 'wfo');

data.to_netcdf(datadir+filename)

   
    